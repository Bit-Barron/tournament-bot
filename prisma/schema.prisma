// Prisma schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  username      String
  brawlstars_id String         @unique
  discord_id    String         @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  participations Participation[]
  role          UserRole       @default(USER)
  wonRounds     TournamentRound[] @relation("RoundWinner")
}

model Tournament {
  id                Int               @id @default(autoincrement())
  tournament_name   String
  start_date        DateTime
  game_type         GameType
  status            TournamentStatus  @default(PENDING)
  participations    Participation[]
  max_participants  Int
  hosted_by         String
  rounds            TournamentRound[]
}

model Participation {
  id           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId Int
  joinedAt     DateTime   @default(now())

  @@unique([userId, tournamentId])
}

model TournamentRound {
  id           Int        @id @default(autoincrement())
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId Int
  roundNumber  Int
  winner       User?      @relation("RoundWinner", fields: [winnerId], references: [id])
  winnerId     Int?

  @@unique([tournamentId, roundNumber])
}

model Admin {
  id       String @id @default(cuid())
  username String @unique
  password String
}

enum GameType {
  SOLO
  DUO
  TRIOS
}

enum TournamentStatus {
  PENDING
  ONGOING
  CANCELED
  COMPLETED
}

enum UserRole {
  USER
  BANNED
}